import {parseMap, part1, part2} from './10';

describe('Day 10', () => {
  test('Part 1', () => {
    expect(
      part1(
        parseMap(`.#..#
.....
#####
....#
...##`)
      )
    ).toEqual([[3, 4], 8]);

    expect(
      part1(
        parseMap(`......#.#.
#..#.#....
..#######.
.#.#.###..
.#..#.....
..#....#.#
#..#....#.
.##.#..###
##...#..#.
.#....####`)
      )
    ).toEqual([[5, 8], 33]);

    expect(
      part1(
        parseMap(`
.#..##.###...#######
##.############..##.
.#.######.########.#
.###.#######.####.#.
#####.##.#.##.###.##
..#####..#.#########
####################
#.####....###.#.#.##
##.#################
#####.##.###..####..
..######..##.#######
####.##.####...##..#
.#####..#.######.###
##...#.##########...
#.##########.#######
.####.#.###.###.#.##
....##.##.###..#####
.#.#.###########.###
#.#.#.#####.####.###
###.##.####.##.#..##`)
      )
    ).toEqual([[11, 13], 210]);
  });

  test('Part 2', () => {
    expect(
      part2(
        parseMap(`.#....#####...#..
##...##.#####..##
##...#...#.#####.
..#.....*...###..
..#.#.....#....##`),
        [8, 3]
      ).slice(0, 2)
    ).toEqual([
      [8, 1],
      [9, 0],
    ]);

    expect(
      part2(
        parseMap(`
.#..##.###...#######
##.############..##.
.#.######.########.#
.###.#######.####.#.
#####.##.#.##.###.##
..#####..#.#########
####################
#.####....###.#.#.##
##.#################
#####.##.###..####..
..######..##.#######
####.##.####...##..#
.#####..#.######.###
##...#.##########...
#.##########.#######
.####.#.###.###.#.##
....##.##.###..#####
.#.#.###########.###
#.#.#.#####.####.###
###.##.####.##.#..##`),
        [11, 13]
      )[199]
    ).toEqual([8, 2]);
  });
});
